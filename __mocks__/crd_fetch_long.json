{
  "kind": "CustomResourceDefinitionList",
  "apiVersion": "apiextensions.k8s.io/v1beta1",
  "metadata": {
    "selfLink": "/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions",
    "resourceVersion": "80093040"
  },
  "items": [
    {
      "metadata": {
        "name": "advertisements.protocol.liqo.io",
        "selfLink": "/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/advertisements.protocol.liqo.io",
        "resourceVersion": "00000",
        "annotations": {
          "controller-gen.kubebuilder.io/version": "v0.2.5"
        }
      },
      "spec": {
        "group": "protocol.liqo.io",
        "version": "v1",
        "names": {
          "plural": "advertisements",
          "singular": "advertisement",
          "shortNames": ["adv"],
          "kind": "Advertisement",
          "listKind": "AdvertisementList"
        },
        "scope": "Cluster",
        "validation": {
          "openAPIV3Schema": {
            "description": "Advertisement is the Schema for the advertisements API",
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "AdvertisementSpec defines the desired state of Advertisement",
                "type": "object",
                "required": [
                  "clusterId",
                  "kubeConfigRef",
                  "network",
                  "timeToLive",
                  "timestamp"
                ],
                "properties": {
                  "clusterId": {
                    "type": "string"
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "description": "Describe a container image",
                      "type": "object",
                      "required": ["names"],
                      "properties": {
                        "names": {
                          "description": "Names by which this image is known. e.g. [\"k8s.gcr.io/hyperkube:v1.0.7\", \"dockerhub.io/google_containers/hyperkube:v1.0.7\"]",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "sizeBytes": {
                          "description": "The size of the image in bytes.",
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    }
                  },
                  "kubeConfigRef": {
                    "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
                    "type": "object",
                    "properties": {
                      "apiVersion": {
                        "description": "API version of the referent.",
                        "type": "string"
                      },
                      "fieldPath": {
                        "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                        "type": "string"
                      },
                      "resourceVersion": {
                        "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                        "type": "string"
                      },
                      "uid": {
                        "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                        "type": "string"
                      }
                    }
                  },
                  "limitRange": {
                    "description": "LimitRangeSpec defines a min/max usage limit for resources that match on kind.",
                    "type": "object",
                    "required": ["limits"],
                    "properties": {
                      "limits": {
                        "description": "Limits is the list of LimitRangeItem objects that are enforced.",
                        "type": "array",
                        "items": {
                          "description": "LimitRangeItem defines a min/max usage limit for any resource that matches on kind.",
                          "type": "object",
                          "properties": {
                            "default": {
                              "description": "Default resource requirement limit value by resource name if resource limit is omitted.",
                              "type": "object",
                              "additionalProperties": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "defaultRequest": {
                              "description": "DefaultRequest is the default resource requirement request value by resource name if resource request is omitted.",
                              "type": "object",
                              "additionalProperties": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "max": {
                              "description": "Max usage constraints on this kind by resource name.",
                              "type": "object",
                              "additionalProperties": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "maxLimitRequestRatio": {
                              "description": "MaxLimitRequestRatio if specified, the named resource must have a request and limit that are both non-zero where limit divided by request is less than or equal to the enumerated value; this represents the max burst for the named resource.",
                              "type": "object",
                              "additionalProperties": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "min": {
                              "description": "Min usage constraints on this kind by resource name.",
                              "type": "object",
                              "additionalProperties": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "type": {
                              "description": "Type of resource that this limit applies to.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "neighbors": {
                    "type": "object",
                    "additionalProperties": {
                      "description": "ResourceList is a set of (resource name, quantity) pairs.",
                      "type": "object",
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  },
                  "network": {
                    "type": "object",
                    "required": ["gatewayIP", "gatewayPrivateIP", "podCIDR"],
                    "properties": {
                      "gatewayIP": {
                        "type": "string"
                      },
                      "gatewayPrivateIP": {
                        "type": "string"
                      },
                      "podCIDR": {
                        "type": "string"
                      },
                      "supportedProtocols": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "prices": {
                    "description": "ResourceList is a set of (resource name, quantity) pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-kubernetes-int-or-string": true
                    }
                  },
                  "properties": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "resourceQuota": {
                    "description": "ResourceQuotaSpec defines the desired hard limits to enforce for Quota.",
                    "type": "object",
                    "properties": {
                      "hard": {
                        "description": "hard is the set of desired hard limits for each named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/",
                        "type": "object",
                        "additionalProperties": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        }
                      },
                      "scopeSelector": {
                        "description": "scopeSelector is also a collection of filters like scopes that must match each object tracked by a quota but expressed using ScopeSelectorOperator in combination with possible values. For a resource to match, both scopes AND scopeSelector (if specified in spec), must be matched.",
                        "type": "object",
                        "properties": {
                          "matchExpressions": {
                            "description": "A list of scope selector requirements by scope of the resources.",
                            "type": "array",
                            "items": {
                              "description": "A scoped-resource selector requirement is a selector that contains values, a scope name, and an operator that relates the scope name and values.",
                              "type": "object",
                              "required": ["operator", "scopeName"],
                              "properties": {
                                "operator": {
                                  "description": "Represents a scope's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist.",
                                  "type": "string"
                                },
                                "scopeName": {
                                  "description": "The name of the scope that the selector applies to.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "scopes": {
                        "description": "A collection of filters that must match each object tracked by a quota. If not specified, the quota matches all objects.",
                        "type": "array",
                        "items": {
                          "description": "A ResourceQuotaScope defines a filter that must match each object tracked by a quota",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "timeToLive": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "timestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "status": {
                "description": "AdvertisementStatus defines the observed state of Advertisement",
                "type": "object",
                "required": [
                  "advertisementStatus",
                  "tunnelEndpointKey",
                  "vkCreated"
                ],
                "properties": {
                  "advertisementStatus": {
                    "type": "string"
                  },
                  "localRemappedPodCIDR": {
                    "type": "string"
                  },
                  "observedGeneration": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "remoteRemappedPodCIDR": {
                    "type": "string"
                  },
                  "tunnelEndpointKey": {
                    "description": "the tunnelEndpoint associated with the foreign cluster",
                    "type": "object",
                    "required": ["name", "namespace"],
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "namespace": {
                        "type": "string"
                      }
                    }
                  },
                  "vkCreated": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "versions": [
          {
            "name": "v1",
            "served": true,
            "storage": true
          }
        ]
      },
      "status": {
        "conditions": [
          {
            "type": "NamesAccepted",
            "status": "True",
            "reason": "NoConflicts",
            "message": "no conflicts found"
          },
          {
            "type": "Established",
            "status": "True",
            "reason": "InitialNamesAccepted",
            "message": "the initial names have been accepted"
          }
        ],
        "acceptedNames": {
          "plural": "advertisements",
          "singular": "advertisement",
          "shortNames": ["adv"],
          "kind": "Advertisement",
          "listKind": "AdvertisementList"
        },
        "storedVersions": ["v1"]
      }
    },
    {
      "metadata": {
        "name": "noannnoresnoschemas.test",
        "selfLink": "/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/noannnoresnoschemas.test",
        "resourceVersion": "0000000"
      },
      "spec": {
        "group": "test",
        "version": "v1alpha1",
        "names": {
          "plural": "noannnoresnoschemas",
          "singular": "noannnoresnoschema",
          "kind": "NoAnnNoResNoSchema",
          "listKind": "NoAnnNoResNoSchemaList"
        }
      }
    },
    {
      "metadata": {
        "name": "manyresources.test",
        "selfLink": "/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/manyresources.test",
        "resourceVersion": "000000"
      },
      "spec": {
        "group": "crd.projectcalico.org",
        "version": "v1",
        "names": {
          "plural": "manyresources",
          "singular": "manyresource",
          "kind": "ManyResource",
          "listKind": "ManyResourceList"
        }
      }
    },
    {
      "metadata": {
        "name": "liqodashtests.dashboard.liqo.io",
        "selfLink": "/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/liqodashtests.dashboard.liqo.io",
        "uid": "22332251-e719-463d-b4a0-be3835e0f04b",
        "resourceVersion": "75319285",
        "generation": 1,
        "creationTimestamp": "2020-06-01T10:13:44Z",
        "annotations": {
          "description": "A test CRD for some implemetation on the liqo-dashboard",
          "template": "dashboard.liqo.io/v1/piecharts/pie-test-123455"
        }
      },
      "spec": {
        "group": "dashboard.liqo.io",
        "version": "v1",
        "names": {
          "plural": "liqodashtests",
          "singular": "liqodashtest",
          "kind": "LiqoDashTest",
          "listKind": "LiqoDashTestList"
        },
        "scope": "Namespaced",
        "validation": {
          "openAPIV3Schema": {
            "type": "object",
            "properties": {
              "apiVersion": {
                "type": "string"
              },
              "kind": {
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "properties": {
                  "item": {
                    "description": "Collection of items",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "cost": {
                          "description": "Cost of the item",
                          "type": "integer"
                        },
                        "name": {
                          "description": "Name of the item",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "versions": [
          {
            "name": "v1",
            "served": true,
            "storage": true
          }
        ],
        "conversion": {
          "strategy": "None"
        },
        "preserveUnknownFields": true
      },
      "status": {
        "conditions": [
          {
            "type": "NamesAccepted",
            "status": "True",
            "lastTransitionTime": "2020-06-01T10:13:44Z",
            "reason": "NoConflicts",
            "message": "no conflicts found"
          },
          {
            "type": "Established",
            "status": "True",
            "lastTransitionTime": "2020-06-01T10:13:44Z",
            "reason": "InitialNamesAccepted",
            "message": "the initial names have been accepted"
          },
          {
            "type": "NonStructuralSchema",
            "status": "True",
            "lastTransitionTime": "2020-06-01T10:13:44Z",
            "reason": "Violations",
            "message": "spec.versions[0].schema.openAPIV3Schema.properties[spec].type: Required value: must not be empty for specified object fields"
          }
        ],
        "acceptedNames": {
          "plural": "liqodashtests",
          "singular": "liqodashtest",
          "kind": "LiqoDashTest",
          "listKind": "LiqoDashTestList"
        },
        "storedVersions": ["v1"]
      }
    },
    {
      "metadata": {
        "name": "piecharts.dashboard.liqo.io",
        "selfLink": "/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/piecharts.dashboard.liqo.io",
        "uid": "a97b51b8-21ae-4867-80a3-70f30d791c5f",
        "resourceVersion": "62270658",
        "generation": 1,
        "creationTimestamp": "2020-06-03T13:35:46Z",
        "annotations": {
          "description": "This CRD is used to create generic pie chart designs"
        }
      },
      "spec": {
        "group": "dashboard.liqo.io",
        "version": "v1",
        "names": {
          "plural": "piecharts",
          "singular": "piechart",
          "shortNames": ["pies"],
          "kind": "PieChart",
          "listKind": "PieChartList"
        },
        "scope": "Namespaced",
        "validation": {
          "openAPIV3Schema": {
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "type": "object",
                "required": ["values", "labels"],
                "properties": {
                  "labels": {
                    "description": "Path to the labels to use",
                    "type": "string"
                  },
                  "values": {
                    "description": "Path to the values to use",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "versions": [
          {
            "name": "v1",
            "served": true,
            "storage": true
          }
        ],
        "conversion": {
          "strategy": "None"
        },
        "preserveUnknownFields": true
      },
      "status": {
        "conditions": [
          {
            "type": "NamesAccepted",
            "status": "True",
            "lastTransitionTime": "2020-06-03T13:35:46Z",
            "reason": "NoConflicts",
            "message": "no conflicts found"
          },
          {
            "type": "Established",
            "status": "True",
            "lastTransitionTime": "2020-06-03T13:35:46Z",
            "reason": "InitialNamesAccepted",
            "message": "the initial names have been accepted"
          }
        ],
        "acceptedNames": {
          "plural": "piecharts",
          "singular": "piechart",
          "shortNames": ["pies"],
          "kind": "PieChart",
          "listKind": "PieChartList"
        },
        "storedVersions": ["v1"]
      }
    },
    {
      "metadata": {
        "name": "tunnelendpoints.liqonet.liqo.io",
        "selfLink": "/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/tunnelendpoints.liqonet.liqo.io",
        "uid": "f56d99a0-ea18-46e6-868a-df6ba1b8348a",
        "resourceVersion": "67246742",
        "generation": 1,
        "creationTimestamp": "2020-06-11T13:57:31Z",
        "annotations": {
          "controller-gen.kubebuilder.io/version": "v0.2.5"
        }
      },
      "spec": {
        "group": "liqonet.liqo.io",
        "version": "v1",
        "names": {
          "plural": "tunnelendpoints",
          "singular": "tunnelendpoint",
          "kind": "TunnelEndpoint",
          "listKind": "TunnelEndpointList"
        },
        "scope": "Cluster",
        "validation": {
          "openAPIV3Schema": {
            "description": "TunnelEndpoint is the Schema for the endpoints API",
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "TunnelEndpointSpec defines the desired state of TunnelEndpoint",
                "type": "object",
                "required": [
                  "clusterID",
                  "podCIDR",
                  "tunnelPrivateIP",
                  "tunnelPublicIP"
                ],
                "properties": {
                  "clusterID": {
                    "type": "string"
                  },
                  "podCIDR": {
                    "type": "string"
                  },
                  "tunnelPrivateIP": {
                    "type": "string"
                  },
                  "tunnelPublicIP": {
                    "type": "string"
                  }
                }
              },
              "status": {
                "description": "TunnelEndpointStatus defines the observed state of TunnelEndpoint",
                "type": "object",
                "properties": {
                  "NAT": {
                    "type": "boolean"
                  },
                  "localRemappedPodCIDR": {
                    "type": "string"
                  },
                  "localTunnelPrivateIP": {
                    "type": "string"
                  },
                  "localTunnelPublicIP": {
                    "type": "string"
                  },
                  "phase": {
                    "description": "INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run \"make\" to regenerate code after modifying this file\\",
                    "type": "string"
                  },
                  "remoteRemappedPodCIDR": {
                    "type": "string"
                  },
                  "remoteTunnelPrivateIP": {
                    "type": "string"
                  },
                  "remoteTunnelPublicIP": {
                    "type": "string"
                  },
                  "tunnelIFaceIndex": {
                    "type": "integer"
                  },
                  "tunnelIFaceName": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "versions": [
          {
            "name": "v1",
            "served": true,
            "storage": true
          }
        ],
        "conversion": {
          "strategy": "None"
        },
        "preserveUnknownFields": true
      },
      "status": {
        "conditions": [
          {
            "type": "NamesAccepted",
            "status": "True",
            "lastTransitionTime": "2020-06-11T13:57:31Z",
            "reason": "NoConflicts",
            "message": "no conflicts found"
          },
          {
            "type": "Established",
            "status": "True",
            "lastTransitionTime": "2020-06-11T13:57:31Z",
            "reason": "InitialNamesAccepted",
            "message": "the initial names have been accepted"
          }
        ],
        "acceptedNames": {
          "plural": "tunnelendpoints",
          "singular": "tunnelendpoint",
          "kind": "TunnelEndpoint",
          "listKind": "TunnelEndpointList"
        },
        "storedVersions": ["v1"]
      }
    },
    {
      "metadata": {
        "name": "views.dashboard.liqo.io",
        "selfLink": "/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/views.dashboard.liqo.io",
        "resourceVersion": "0000000",
        "annotations": {
          "description": "This CRD is used to create custom views from a set of CRDs",
          "favourite": "true"
        }
      },
      "spec": {
        "group": "dashboard.liqo.io",
        "version": "v1",
        "names": {
          "plural": "views",
          "singular": "view",
          "kind": "View",
          "listKind": "ViewList"
        },
        "scope": "Namespaced",
        "validation": {
          "openAPIV3Schema": {
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "type": "object",
                "properties": {
                  "layout": {
                    "description": "Layout that will be displayed",
                    "type": "object"
                  },
                  "viewName": {
                    "description": "The name showed in the sidebar",
                    "type": "string"
                  },
                  "crds": {
                    "description": "Collection of CR template views",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "crdName": {
                          "description": "The kind of a CRD we want to put in the view",
                          "type": "string"
                        },
                        "crdAltName": {
                          "description": "The name showed in the custom view for this CRD",
                          "type": "string"
                        },
                        "template": {
                          "description": "The path of a type template CRD custom resource (if default use the template in the CRD)",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "status": {}
    },
    {
      "metadata": {
        "name": "test1.liqo.com",
        "selfLink": "/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/test1s.test.com",
        "resourceVersion": "0000000"
      },
      "spec": {
        "group": "test.com",
        "version": "v1",
        "names": {
          "plural": "test1s",
          "singular": "test1",
          "kind": "Test1",
          "listKind": "Test1List"
        }
      }
    },
    {
      "metadata": {
        "name": "test4.liqo.com",
        "selfLink": "/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/test4s.test.com",
        "resourceVersion": "000000"
      },
      "spec": {
        "group": "test.com",
        "version": "v1",
        "names": {
          "plural": "test4s",
          "singular": "test4",
          "kind": "Test4",
          "listKind": "Test4List"
        }
      }
    },
    {
      "metadata": {
        "name": "clusterconfigs.policy.liqo.io",
        "selfLink": "/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/clusterconfigs.policy.liqo.io",
        "uid": "012e79f2-fe78-4ac3-9bd5-06c5d98f14b8",
        "resourceVersion": "0000000"
      },
      "spec": {
        "group": "policy.liqo.io",
        "version": "v1",
        "names": {
          "plural": "clusterconfigs",
          "singular": "clusterconfig",
          "kind": "ClusterConfig",
          "listKind": "ClusterConfigList"
        },
        "scope": "Cluster",
        "validation": {
          "openAPIV3Schema": {
            "description": "ClusterConfig is the Schema for the clusterconfigs API",
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "ClusterConfigSpec defines the desired state of ClusterConfig",
                "type": "object",
                "required": ["advertisementConfig", "discoveryConfig"],
                "properties": {
                  "advertisementConfig": {
                    "type": "object",
                    "required": ["autoAccept"],
                    "properties": {
                      "autoAccept": {
                        "description": "This is a description",
                        "type": "boolean"
                      },
                      "maxAcceptableAdvertisement": {
                        "description": "This is a description",
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                      },
                      "resourceSharingPercentage": {
                        "description": "This is a description",
                        "type": "integer",
                        "format": "int32",
                        "maximum": 100,
                        "minimum": 0
                      }
                    }
                  },
                  "discoveryConfig": {
                    "type": "object",
                    "required": [
                      "autojoin",
                      "domain",
                      "enableAdvertisement",
                      "enableDiscovery",
                      "name",
                      "port",
                      "service",
                      "updateTime",
                      "waitTime"
                    ],
                    "properties": {
                      "autojoin": {
                        "description": "This is a description",
                        "type": "boolean"
                      },
                      "domain": {
                        "description": "This is a description",
                        "type": "string"
                      },
                      "enableAdvertisement": {
                        "description": "This is a description",
                        "type": "boolean"
                      },
                      "enableDiscovery": {
                        "description": "This is a description",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "This is a description",
                        "type": "string"
                      },
                      "port": {
                        "description": "This is a description",
                        "type": "integer",
                        "maximum": 65355,
                        "minimum": 1
                      },
                      "service": {
                        "description": "This is a description",
                        "type": "string"
                      },
                      "updateTime": {
                        "description": "This is a description",
                        "type": "integer",
                        "minimum": 2
                      },
                      "waitTime": {
                        "description": "This is a description",
                        "type": "integer",
                        "minimum": 1
                      }
                    }
                  }
                }
              },
              "status": {}
            }
          }
        }
      },
      "status": {}
    },
    {
      "metadata": {
        "name": "schedulingnodes.scheduling.liqo.io",
        "selfLink": "/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/schedulingnodes.scheduling.liqo.io",
        "resourceVersion": "000000",
        "annotations": {
          "template": "dashboard.liqo.io/v1/graphs/graph-test"
        }
      },
      "spec": {
        "group": "scheduling.liqo.io",
        "version": "v1",
        "names": {
          "plural": "schedulingnodes",
          "singular": "schedulingnode",
          "kind": "SchedulingNode",
          "listKind": "SchedulingNodeList"
        },
        "scope": "Cluster",
        "validation": {
          "openAPIV3Schema": {
            "description": "SchedulingNode is the Schema for the schedulingnodes API",
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "SchedulingNodeSpec defines the desired state of SchedulingNode",
                "type": "object",
                "required": ["nodeName", "nodeType"],
                "properties": {
                  "nodeName": {
                    "description": "ResourceName is the name identifying various resources in a ResourceList.",
                    "type": "string"
                  },
                  "nodeType": {
                    "description": "ResourceName is the name identifying various resources in a ResourceList.",
                    "type": "string"
                  },
                  "properties": {
                    "type": "object",
                    "additionalProperties": { "type": "string" }
                  }
                }
              },
              "status": {
                "description": "SchedulingNodeStatus defines the observed state of SchedulingNode",
                "type": "object"
              }
            }
          }
        }
      },
      "status": {}
    },
    {
      "metadata": {
        "name": "graphs.dashboard.liqo.io"
      },
      "spec": {
        "group": "dashboard.liqo.io",
        "names": {
          "plural": "graphs",
          "singular": "graph",
          "kind": "Graph",
          "listKind": "GraphList"
        },
        "validation": {
          "openAPIV3Schema": {
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation\nof an object. Servers should convert recognized schemas to the latest\ninternal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this\nobject represents. Servers may infer this from the endpoint the client\nsubmits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "properties": {
                  "node": {
                    "description": "Name of the node",
                    "type": "string"
                  },
                  "group": {
                    "description": "Group to differentiate between nodes",
                    "properties": {
                      "type": {
                        "description": "On what basis differentiate the groups",
                        "type": "string"
                      },
                      "cluster": {
                        "description": "Cluster nodes based on group's name",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "neighbors": {
                    "description": "Path to a neighbors object",
                    "type": "string"
                  }
                },
                "required": ["node"],
                "type": "object"
              }
            },
            "type": "object"
          }
        }
      },
      "status": {}
    },
    {
      "metadata": {
        "name": "dashboardconfigs.dashboard.liqo.io",
        "selfLink": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/dashboardconfigs.dashboard.liqo.io",
        "uid": "6092e0f8-7996-42dc-b3be-2cf76574827f",
        "resourceVersion": "0000000",
        "creationTimestamp": "2020-10-11T17:00:03Z",
        "annotations": {
          "favourite": "true"
        }
      },
      "spec": {
        "group": "dashboard.liqo.io",
        "names": {
          "plural": "dashboardconfigs",
          "singular": "dashboardconfig",
          "kind": "DashboardConfig",
          "listKind": "DashboardConfigList"
        },
        "scope": "Cluster",
        "versions": [
          {
            "name": "v1alpha1",
            "served": true,
            "storage": true,
            "schema": {
              "openAPIV3Schema": {
                "type": "object",
                "properties": {
                  "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                    "type": "string"
                  },
                  "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                  },
                  "metadata": {
                    "type": "object"
                  },
                  "spec": {
                    "type": "object",
                    "properties": {
                      "default": {
                        "type": "boolean"
                      },
                      "enabled": {
                        "type": "boolean"
                      },
                      "footer": {
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean"
                          },
                          "footerDescription": {
                            "type": "string"
                          },
                          "githubRef": {
                            "type": "boolean"
                          },
                          "link": {
                            "type": "string"
                          }
                        }
                      },
                      "header": {
                        "type": "object",
                        "properties": {
                          "alternativeLogo": {
                            "type": "string"
                          },
                          "alternativeTitle": {
                            "type": "string"
                          },
                          "menu": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "boolean"
                                },
                                "icon": {
                                  "type": "string"
                                },
                                "itemDescription": {
                                  "type": "string"
                                },
                                "link": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "boolean"
                          },
                          "resourceSearch": {
                            "type": "boolean"
                          },
                          "themeModifier": {
                            "type": "boolean"
                          },
                          "themeSwitcher": {
                            "type": "boolean"
                          }
                        }
                      },
                      "resources": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "favourite": {
                              "type": "boolean"
                            },
                            "icon": {
                              "type": "string"
                            },
                            "render": {
                              "type": "object",
                              "properties": {
                                "columns": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "columnContent": {
                                        "type": "string"
                                      },
                                      "columnName": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "tabs": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "tabContent": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "cardContent": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "parameter": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "cardLayout": {
                                              "type": "object",
                                              "properties": {
                                                "h": {
                                                  "type": "integer"
                                                },
                                                "w": {
                                                  "type": "integer"
                                                },
                                                "x": {
                                                  "type": "integer"
                                                },
                                                "y": {
                                                  "type": "integer"
                                                }
                                              }
                                            },
                                            "cardTitle": {
                                              "type": "string"
                                            },
                                            "displayMode": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "tabName": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "resourceName": {
                              "type": "string"
                            },
                            "resourcePath": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "sidebar": {
                        "type": "object",
                        "properties": {
                          "alternativeLogo": {
                            "type": "string"
                          },
                          "enabled": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "status": {
        "acceptedNames": {
          "plural": "dashboardconfigs",
          "singular": "dashboardconfig",
          "kind": "DashboardConfig",
          "listKind": "DashboardConfigList"
        }
      }
    }
  ]
}
